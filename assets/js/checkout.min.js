!function(e){var t={};function r(s){if(t[s])return t[s].exports;var i=t[s]={i:s,l:!1,exports:{}};return e[s].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=e,r.c=t,r.d=function(e,t,s){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(r.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(s,i,function(t){return e[t]}.bind(null,i));return s},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);var s=class{static getParams(e){var t=document.getElementsByTagName("script");for(let r=0;r<t.length;r++)if(t[r].src.indexOf("/"+e)>-1){let e=t[r].src.split("?").pop().split("&"),s={};for(let t=0;t<e.length;t++){let r=e[t].split("=");s[r[0]]=r[1]}return s}return{}}};const i="nails/driver-invoice-stripe";new class{constructor(){this.params=s.getParams("vendor/"+i+"/assets/js/checkout.min.js"),this.hash=this.params.hash,this.key=this.params.key,this.prepareForm(),this.bindEvents(),this.registerValidator()}prepareForm(){let e="#stripe-elements-"+this.hash,t=$(e);this.$form=$("#js-invoice-main-form"),this.$input=$("<input>").attr("type","hidden").attr("name",t.attr("name")),this.$elements=$("<div>").attr("id",e.replace(/^#/,"")).addClass("input"),this.$error=$("<p>").addClass("form__error"),this.$group=$("<div>").append(this.$input).append(this.$elements).append(this.$error),t.replaceWith(this.$group),this.stripe=Stripe(this.key),this.elements=this.stripe.elements(),this.card=this.elements.create("card"),this.card.mount(e),$('label[for="'+e.replace(/^#/,"")+'"]').hide()}bindEvents(){this.card.addEventListener("change",e=>{e.error?this.showError(e.error.message):this.hideError()})}registerValidator(){this.$form.data("validators").push({slug:i,instance:this})}validate(e){this.stripe.createToken(this.card).then(t=>{t.error?e.reject(t.error.message):(this.$input.val(t.token.id),e.resolve())})}showError(e){this.$error.html(e),this.$elements.addClass("has-error")}hideError(){this.$error.html(""),this.$elements.removeClass("has-error")}}}]);